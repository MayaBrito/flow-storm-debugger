{:paths [
         "src-inst"
         "src-dbg" ;; Comment out for releasing inst
         "src-shared"
         "resources"
         ]
 :deps {
        ;; Dependencies needed by both
        org.java-websocket/Java-WebSocket {:mvn/version "1.5.3"}
        com.cognitect/transit-clj {:mvn/version "1.0.329"}
        org.clojure/core.async {:mvn/version "1.5.648"}
        org.clojure/tools.namespace {:mvn/version "1.2.0"}
        com.cognitect/transit-cljs {:mvn/version "0.8.280"}

        org.clojure/tools.build {:mvn/version "0.8.4"
                                 :exclusions [com.google.guava/guava]}
        com.github.jpmonettas/hansel {
                                      ;;:local/root "/home/jmonetta/my-projects/hansel"
                                      :mvn/version "0.1.50"
                                      }

        ;; Comment out for releasing INST ------------------------------------------------
        org.openjfx/javafx-controls {:mvn/version "19.0.2.1"}
        org.openjfx/javafx-base {:mvn/version "19.0.2.1"}
        org.openjfx/javafx-graphics {:mvn/version "19.0.2.1"}
        org.openjfx/javafx-swing {:mvn/version "19.0.2.1"}
        org.kordamp.ikonli/ikonli-javafx {:mvn/version "11.5.0"}
        org.kordamp.ikonli/ikonli-materialdesign-pack {:mvn/version "11.5.0"}
        com.github.jpmonettas/j-system-theme-detector {:mvn/version "3.8"}
        mount/mount {:mvn/version "0.1.16"}
        nrepl/nrepl {:mvn/version "1.0.0"}
        ;---------------------------------------------------------------------
        }

 :aliases {:cljs {:extra-deps {nrepl/nrepl {:mvn/version "0.9.0"}
                               cider/cider-nrepl {:mvn/version "0.28.3"}
                               refactor-nrepl/refactor-nrepl {:mvn/version "3.5.2"}
                               cider/piggieback {:mvn/version "0.5.2"}
                               thheller/shadow-cljs {:mvn/version "2.20.10"}}}
           :dev {:extra-paths ["src-dev"]
                 :extra-deps {org.clojure/clojurescript {:mvn/version "1.11.60"}
                              ;; cljs-docs/cljs-docs {:local/root "/home/jmonetta/other-sources/clojurescript/clojurescript-flow-docs-1.11.60.jar"}
                              ;; spread-docs/spread-docs {:local/root "/home/jmonetta/my-projects/SPREAD/spread-flow-docs.jar"}
                              ;; clindex-docs/clindex-docs {:local/root "/home/jmonetta/my-projects/clindex/clindex-flow-docs-0.4.94.jar"}
                              }
                 :jvm-opts ["-Dproject-name=FlowStorm" "-Djdk.attach.allowAttachSelf" "-XX:+UnlockDiagnosticVMOptions" "-XX:+DebugNonSafepoints" ;; for the profilers
                            ;; "-Xmx10500m" ;; for instrumenting big codebases
                            "-Xdebug" "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044"
                            ]}

           :build {:extra-deps {io.github.clojure/tools.build {:git/tag "v0.8.1" :git/sha "7d40500"}
                                rewrite-clj/rewrite-clj {:mvn/version "1.0.767-alpha"}}
                   :ns-default build
                   :jvm-opts ["-Dcljfx.skip-javafx-initialization=true"] }

           :test {:extra-paths ["test"]
                  :extra-deps {lambdaisland/kaocha {:mvn/version "1.70.1086"}
                               org.clojure/clojurescript {:mvn/version "1.11.60"}}
                  :jvm-opts ["-Xmx10500m"]
                  :main-opts ["-m" "kaocha.runner"]}}}
